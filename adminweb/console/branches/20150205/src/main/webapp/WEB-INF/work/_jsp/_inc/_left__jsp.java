/*
 * JSP generated by Resin-4.0.23 (built Fri, 30 Sep 2011 09:31:50 PDT)
 */

package _jsp._inc;
import javax.servlet.*;
import javax.servlet.jsp.*;
import javax.servlet.http.*;
import com.tuanche.console.util.GlobalConstants;
import com.tuanche.console.bean.Employee;

public class _left__jsp extends com.caucho.jsp.JavaPage
{
  private static final java.util.HashMap<String,java.lang.reflect.Method> _jsp_functionMap = new java.util.HashMap<String,java.lang.reflect.Method>();
  private boolean _caucho_isDead;
  private boolean _caucho_isNotModified;
  private com.caucho.jsp.PageManager _jsp_pageManager;
  
  public void
  _jspService(javax.servlet.http.HttpServletRequest request,
              javax.servlet.http.HttpServletResponse response)
    throws java.io.IOException, javax.servlet.ServletException
  {
    javax.servlet.http.HttpSession session = request.getSession(true);
    com.caucho.server.webapp.WebApp _jsp_application = _caucho_getApplication();
    com.caucho.jsp.PageContextImpl pageContext = _jsp_pageManager.allocatePageContext(this, _jsp_application, request, response, null, session, 8192, true, false);

    TagState _jsp_state = null;

    try {
      _jspService(request, response, pageContext, _jsp_application, session, _jsp_state);
    } catch (java.lang.Throwable _jsp_e) {
      pageContext.handlePageException(_jsp_e);
    } finally {
      _jsp_pageManager.freePageContext(pageContext);
    }
  }
  
  private void
  _jspService(javax.servlet.http.HttpServletRequest request,
              javax.servlet.http.HttpServletResponse response,
              com.caucho.jsp.PageContextImpl pageContext,
              javax.servlet.ServletContext application,
              javax.servlet.http.HttpSession session,
              TagState _jsp_state)
    throws Throwable
  {
    javax.servlet.jsp.JspWriter out = pageContext.getOut();
    final javax.el.ELContext _jsp_env = pageContext.getELContext();
    javax.servlet.ServletConfig config = getServletConfig();
    javax.servlet.Servlet page = this;
    javax.servlet.jsp.tagext.JspTag _jsp_parent_tag = null;
    com.caucho.jsp.PageContextImpl _jsp_parentContext = pageContext;
    response.setContentType("text/html; charset=UTF-8");

    out.write(_jsp_string0, 0, _jsp_string0.length);
    
	Employee employee=(Employee)session.getAttribute(GlobalConstants.SESSION_EMP);
	if(employee!=null){
		for(String role:employee.getRoleIds().split(",")){
			if(role!=null&&role.length()>0){
	
    out.write(_jsp_string1, 0, _jsp_string1.length);
    out.print((role));
    out.write(_jsp_string2, 0, _jsp_string2.length);
    
	}}}
    out.write(_jsp_string3, 0, _jsp_string3.length);
  }

  private com.caucho.make.DependencyContainer _caucho_depends
    = new com.caucho.make.DependencyContainer();

  public java.util.ArrayList<com.caucho.vfs.Dependency> _caucho_getDependList()
  {
    return _caucho_depends.getDependencies();
  }

  public void _caucho_addDepend(com.caucho.vfs.PersistentDependency depend)
  {
    super._caucho_addDepend(depend);
    _caucho_depends.add(depend);
  }

  protected void _caucho_setNeverModified(boolean isNotModified)
  {
    _caucho_isNotModified = true;
  }

  public boolean _caucho_isModified()
  {
    if (_caucho_isDead)
      return true;

    if (_caucho_isNotModified)
      return false;

    if (com.caucho.server.util.CauchoSystem.getVersionId() != -1793038186146849453L)
      return true;

    return _caucho_depends.isModified();
  }

  public long _caucho_lastModified()
  {
    return 0;
  }

  public void destroy()
  {
      _caucho_isDead = true;
      super.destroy();
    TagState tagState;
  }

  public void init(com.caucho.vfs.Path appDir)
    throws javax.servlet.ServletException
  {
    com.caucho.vfs.Path resinHome = com.caucho.server.util.CauchoSystem.getResinHome();
    com.caucho.vfs.MergePath mergePath = new com.caucho.vfs.MergePath();
    mergePath.addMergePath(appDir);
    mergePath.addMergePath(resinHome);
    com.caucho.loader.DynamicClassLoader loader;
    loader = (com.caucho.loader.DynamicClassLoader) getClass().getClassLoader();
    String resourcePath = loader.getResourcePathSpecificFirst();
    mergePath.addClassPath(resourcePath);
    com.caucho.vfs.Depend depend;
    depend = new com.caucho.vfs.Depend(appDir.lookup("inc/left.jsp"), -1235156746234390723L, false);
    _caucho_depends.add(depend);
  }

  final static class TagState {

    void release()
    {
    }
  }

  public java.util.HashMap<String,java.lang.reflect.Method> _caucho_getFunctionMap()
  {
    return _jsp_functionMap;
  }

  public void caucho_init(ServletConfig config)
  {
    try {
      com.caucho.server.webapp.WebApp webApp
        = (com.caucho.server.webapp.WebApp) config.getServletContext();
      init(config);
      if (com.caucho.jsp.JspManager.getCheckInterval() >= 0)
        _caucho_depends.setCheckInterval(com.caucho.jsp.JspManager.getCheckInterval());
      _jsp_pageManager = webApp.getJspApplicationContext().getPageManager();
      com.caucho.jsp.TaglibManager manager = webApp.getJspApplicationContext().getTaglibManager();
      com.caucho.jsp.PageContextImpl pageContext = new com.caucho.jsp.InitPageContextImpl(webApp, this);
    } catch (Exception e) {
      throw com.caucho.config.ConfigException.create(e);
    }
  }

  private final static char []_jsp_string3;
  private final static char []_jsp_string1;
  private final static char []_jsp_string0;
  private final static char []_jsp_string2;
  static {
    _jsp_string3 = "\n	zNodes = zNodes.replace(\"][\",\"\");\n	zNodes = eval(\"(\"+zNodes+\")\");\n	$.fn.zTree.init($(\"#treeMenu\"), setting, zNodes);	\n});\n$(window).resize(function(){\n	var windowHeight = $(window).height();\n	if(windowHeight < 600){\n		$(\"#left_content\").css({\"height\":windowHeight});\n	}else{\n		$(\"#left_content\").css({\"height\":\"600px\"});\n	};\n});\n</script>\n<body>\n<div id=\"left_content\">	\n	 <div id=\"main_nav\">\n     	 <ul id=\"treeMenu\" class=\"ztree menutree showIcon\"></ul>\n	 </div>\n</div>\n</body>\n</html>".toCharArray();
    _jsp_string1 = "\n		$.get('/inc/auth/".toCharArray();
    _jsp_string0 = "\n\n\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" />\n<link rel=\"stylesheet\" href=\"/css/bootstrap.min.css\" type=\"text/css\" />\n<link rel=\"stylesheet\" href=\"/css/common.css\" type=\"text/css\" />\n<script type=\"text/javascript\" src=\"/js/jquery.js\" charset=\"UTF-8\"></script>\n<script type=\"text/javascript\" src=\"/js/ztree.js\" charset=\"UTF-8\"></script>\n<title>\u5de6\u4fa7\u5bfc\u822a\u680f\n</title>\n</head>\n<script  type=\"text/javascript\" charset=\"UTF-8\">\n/*\u52a0\u8f7d\u65b0\u7684\u5bfc\u822a*/\nvar curMenu = null, zTree_Menu = null;\nvar setting = {\n	view: {\n		showLine: false,\n		showIcon: false,\n		selectedMulti: false,\n		dblClickExpand: false				\n	},\n	data: {\n		simpleData: {\n			enable: true\n		}\n	},\n	callback: {\n		beforeExpand: beforeExpand,\n		onExpand: onExpand,\n		onClick: onClick\n	}\n};\n// \u4fdd\u6301\u5355\u4e00\u5c55\u5f00\u8def\u5f84\n// \u5229\u7528 setting.callback.beforeExpand / onExpand \u4e8b\u4ef6\u56de\u8c03\u51fd\u6570\u5b9e\u73b0\u5c55\u5f00\u89c4\u5219\nvar curExpandNode = null;\nfunction beforeExpand(treeId, treeNode) {\n	var pNode = curExpandNode ? curExpandNode.getParentNode():null;\n	var treeNodeP = treeNode.parentTId ? treeNode.getParentNode():null;\n	var zTree = $.fn.zTree.getZTreeObj(\"treeMenu\");\n	for(var i=0, l=!treeNodeP ? 0:treeNodeP.children.length; i<l; i++ ) {\n		if (treeNode !== treeNodeP.children[i]) {\n			zTree.expandNode(treeNodeP.children[i], false);\n		}\n	}\n	while (pNode) {\n		if (pNode === treeNode) {\n			break;\n		}\n		pNode = pNode.getParentNode();\n	}\n	if (!pNode) {\n		singlePath(treeNode);\n	}\n\n}\nfunction singlePath(newNode) {\n	if (newNode === curExpandNode) return;\n	if (curExpandNode && curExpandNode.open==true) {\n		var zTree = $.fn.zTree.getZTreeObj(\"treeMenu\");\n		if (newNode.parentTId === curExpandNode.parentTId) {\n			zTree.expandNode(curExpandNode, false);\n		} else {\n			var newParents = [];\n			while (newNode) {\n				newNode = newNode.getParentNode();\n				if (newNode === curExpandNode) {\n					newParents = null;\n					break;\n				} else if (newNode) {\n					newParents.push(newNode);\n				}\n			}\n			if (newParents!=null) {\n				var oldNode = curExpandNode;\n				var oldParents = [];\n				while (oldNode) {\n					oldNode = oldNode.getParentNode();\n					if (oldNode) {\n						oldParents.push(oldNode);\n					}\n				}\n				if (newParents.length>0) {\n					zTree.expandNode(oldParents[Math.abs(oldParents.length-newParents.length)-1], false);\n				} else {\n					zTree.expandNode(oldParents[oldParents.length-1], false);\n				}\n			}\n		}\n	}\n	curExpandNode = newNode;\n}\nfunction onExpand(event, treeId, treeNode) {\n	curExpandNode = treeNode;\n}\n\nfunction onClick(e,treeId, treeNode) {	\n	var zTree = $.fn.zTree.getZTreeObj(\"treeMenu\");\n	zTree.expandNode(treeNode, null, null, null, true);\n}\n$(document).ready(function(){\n	$.ajaxSetup({async : false});\n	var zNodes = '';\n	".toCharArray();
    _jsp_string2 = ".js',function (data){\n			zNodes += data;	\n			zNodes=zNodes.replace(\"][\",\"\");\n		 },'script');		\n	".toCharArray();
  }
}
